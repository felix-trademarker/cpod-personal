<section class="heroBG">
  <div class="container">
  <div class="col-md-6" style="background: #00000038;padding: 20px;">
    <h1>Introducing: ChinesePod <br>In Person Online 10 Classes</h1>
    <p>Boost your learning pace with the ChinesePod Online 10 Classes - and get your personalized classes a real native teacher over video chat! Our teachers know the ChinesePod curriculum inside out and can help you practice real live conversations.</p>
    <p class="text-right" style="text-align: right;"><span style="box-shadow: 0px 0px 5px #2e2e2e;" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal">ORDER NOW</span></p>
  </div>
  </div>
  </section>
    </div>
  <section>
    <div class="container py-5">
    <div class="row flex-lg-row-reverse align-items-center">
      <div class="col-md-6">
      <img src="https://s3.amazonaws.com/assets.chinesepod/images-live/how-it-works.png" class="mx-auto" style="width: 150px;">
      </div>
      <div class="col-md-6">
      <h2 class="display-5 fw-bold lh-1" style="color: #e1001e;margin-bottom: 0px;font-size: 30px;margin-bottom: 10px;">HOW IT WORKS</h2>
      <div style="width: 100px;border-top: 5px solid #e1001e;margin-bottom: 6px;"></div>
      <div style="width: 70px;border-top: 5px solid #707b98;margin-bottom: 6px;"></div>
      <div style="width: 40px;border-top: 5px solid #00f3e6;margin-bottom: 10px;"></div>
      <p>ChinesePod is launching this service for Europe and North America. Our teachers are experienced educators that will tailor a curriculum to your specific learning levels, incorporating your learning objectives.</p>
      </div>
    </div>
    </div>
  </section>
  <section style="background: #f8f9fa;">
    <div class="container py-5">
    <div class="row align-items-center">
      <div class="col-md-4">
      <img src="https://s3.amazonaws.com/assets.chinesepod/images-live/time-zone.png" class="mx-auto" style="width: 150px;">
      </div>
      <div class="col-md-8">
      <h2 class="display-5 fw-bold lh-1" style="color: #e1001e;margin-bottom: 0px;font-size: 30px;margin-bottom: 10px;">TIME ZONES - a problem?</h2>
      <div style="width: 100px;border-top: 5px solid #e1001e;margin-bottom: 6px;"></div>
      <div style="width: 70px;border-top: 5px solid #5eac24;margin-bottom: 6px;"></div>
      <div style="width: 40px;border-top: 5px solid #ffcd00;margin-bottom: 10px;"></div>
      <p>Most of our students decide to have classes in evening hours - so time zones are not a problem. For the U.S. East Coast, we can accommodate classes from early mornings until lunch time (and for the West Coast, we can do early mornings before 9:00 AM)</p>
      </div>
    </div>
    </div>
  </section>
  <section>
    <div class="container py-5">
    <div class="row flex-lg-row-reverse align-items-center">
      <div class="col-md-4">
      <img src="https://s3.amazonaws.com/assets.chinesepod/images-live/satisfaction.png" class="mx-auto" style="width: 150px;">
      </div>
      <div class="col-md-8">
      <h2 class="display-5 fw-bold lh-1" style="color: #e1001e;margin-bottom: 0px;font-size: 30px;margin-bottom: 10px;">SATISFACTION GUARANTEED</h2>
      <div style="width: 100px;border-top: 5px solid #e1001e;margin-bottom: 6px;"></div>
      <div style="width: 70px;border-top: 5px solid #fb9927;margin-bottom: 6px;"></div>
      <div style="width: 40px;border-top: 5px solid #1c96f9;margin-bottom: 10px;"></div>
      <p>Still not convinced? We are - and to such degree that we offer a MONEY BACK guarantee: If after the second lesson you decide that you are not 100% satisfied, we will refund your entire package (including the two hours you already used up). The only thing we would ask is that you tell us what exactly you did not like - other than that, no questions asked! Guaranteed!</p>
      </div>
    </div>
    </div>
  </section>
  <section style="background: #f8f9fa;">
    <div class="container py-5">
    <div class="row align-items-center">
      <div class="col-md-6">
      <img src="https://s3.amazonaws.com/assets.chinesepod/images-live/pricing.png" class="mx-auto" style="width: 150px;">
      </div>
      <div class="col-md-6">
      <h2 class="display-5 fw-bold lh-1" style="color: #e1001e;margin-bottom: 0px;font-size: 30px;margin-bottom: 10px;">PRICING</h2>
      <div style="width: 100px;border-top: 5px solid #e1001e;margin-bottom: 6px;"></div>
      <div style="width: 70px;border-top: 5px solid #2a428c;margin-bottom: 6px;"></div>
      <div style="width: 40px;border-top: 5px solid #ffcd00;margin-bottom: 10px;"></div>
      <p>Our package is very simple: 10 classes for only $299.</p>
      <span class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal">ORDER NOW</span>
      </div>
    </div>
    </div>
  </section>

  <!-- Modal -->
  <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Checkout Form</h5>
        </div>
        <div class="modal-body">

          <section id="checkout-content">
            <div class="container1">
              <div class="row justify-content-center" style="align-items: flex-end;">
                <div class="col-md-12">
          
                  <form id="payment-form" method="post" action="/personal/placeorder" class="card" style="margin:0;">
          
                    <div class="card-body">
          
                      <div class="form-row" v-if="showError">
                        <div class="col-md-12">
                          <div class="alert alert-danger" role="alert" >
                            {{ errorMessage }}
                          </div>
                        </div>
                      </div>
                                      
                      <div class="row g-3">
                        
                        <div class="form-row">
                          <p class="levelLabel" v-if="customerData && customerData.status">Current Level: {{ customerData.data.level ? customerData.data.level : 'newbie' }}
                            <br>
                            <a v-if="vuex && vuex.token" href="https://www.chinesepod.com/settings" target="_blank">Update Level</a>
                            <a v-if="!vuex || !vuex.token" href="/personal/login/<%= encodedEmail %>" >Update Level</a>
                          </p>
                          <p class="lh-1">ChinesePod Live Classes Package</p>
                          <p class="lh-1">10 sessions of one hour each</p>
                        </div>
                        <div class="col-md-12">
                          <div class="">
                            <label for="selectedZone"><b>Time Zone : <%= clientTimezone %></b></label>
                            <input type="hidden" name="selectedZone" value="<%= clientTimezone %>">
                            <label for="email">Customer Email</label>
                          </div>
                          
                          <div class="">
                            <input type="text" id="email" name="email" v-model.lazy="customerEmail" @change="checkEmail" class="form-control ccInput" placeholder="Email Address">
                            <input v-if="customerData && customerData.data" type="hidden" name="sourceCard" v-model="customerData.data.sourceCard">
                            <input v-if="customerData && customerData.data" type="hidden" name="customerId" v-model="customerData.data.id">
                          </div>
                        </div>

                      </div>

                      <!-- SCHEDULING BLOCK START -->
                      <div class="row">
                        <div class="col-md-12">
                          <label>When would you like your {{ selectedSchedules.length > 0 ? 'next' : 'first' }} lesson:</label>
                        </div>

                        <!-- DAYS SELECTION -->
                        <div :class="'col-md-12 ' + (stepSchedule != 1 ? 'd-none':'')">
                          <ul class="list-btns">
                            <li><span class="btn btn-outline-danger" @click="setDay('<%= moment().add('1','days').format('l') %>', '<%= moment().add('1','days').format('dddd') %>')">Tomorrow</span></li>
                            <li><span class="btn btn-outline-danger" @click="setDay('<%= moment().add('2','days').format('l') %>', '<%= moment().add('2','days').format('dddd') %>')"><%= moment().add('2','days').format('dddd') %></span></li>
                            <li><span class="btn btn-outline-danger" @click="setDay('<%= moment().add('3','days').format('l') %>', '<%= moment().add('3','days').format('dddd') %>')"><%= moment().add('3','days').format('dddd') %></span></li>
                            <li><span class="btn btn-outline-danger" @click="setDay('<%= moment().add('4','days').format('l') %>', '<%= moment().add('4','days').format('dddd') %>')"><%= moment().add('4','days').format('dddd') %></span></li>
                            <li><span class="btn btn-outline-danger" @click="setDay('<%= moment().add('5','days').format('l') %>', '<%= moment().add('5','days').format('dddd') %>')"><%= moment().add('5','days').format('dddd') %></span></li>
                            <li><span class="btn btn-outline-danger" @click="setDay('<%= moment().add('6','days').format('l') %>', '<%= moment().add('6','days').format('dddd') %>')"><%= moment().add('6','days').format('dddd') %></span></li>
                          </ul>
                        </div>

                        <!-- TIME -->
                        <div :class="'col-md-12 ' + (stepSchedule != 2 ? 'd-none':'')">
                          <ul class="list-btns">
                            <li><span class="btn btn-outline-danger" @click="setTime(0)">Mornings</span></li>
                            <li><span class="btn btn-outline-danger" @click="setTime(1)">Lunch Time</span></li>
                            <li><span class="btn btn-outline-danger" @click="setTime(2)">Afternoon</span></li>
                            <li><span class="btn btn-outline-danger" @click="setTime(3)">Evening</span></li>
                          </ul>
                        </div>

                        <!-- HOURS -->
                        <div :class="'col-md-12 ' + (stepSchedule != 3 ? 'd-none':'')">
                          <ul class="list-btns">
                            <li v-for="time in timeSelections[selectedTime]"><span class="btn btn-outline-danger" @click="setHours(time)">{{ time }}</span></li>
                          </ul>
                        </div>

                        <!-- OPTIONS -->
                        <div :class="'col-md-12 ' + (stepSchedule != 4 ? 'd-none':'')">
                          <ul class="list-btns">
                            <li><span class="btn btn-danger" @click="selectOptions('anotherSchedule','I want to make another schedule')" >I want to make another schedule</span></li>
                            <li><span class="btn btn-danger" @click="selectOptions('setAllForWeek','I want to make it every '+selectedDayFormat+' of the week')" >I want to make it every {{ selectedDayFormat }} of the week</span></li>
                            <li><span class="btn btn-danger" @click="selectOptions('decideLater','I will decide later')" >I will decide later</span></li>
                          </ul>
                        </div>

                        <!-- SELECTED SCHEDULES -->
                        <div :class="'col-md-12 mt-2 mb-4 ' + (stepSchedule != 6 ? 'd-none':'')">
                          <table class="table">
                            <tr>
                              <th>Date</th>
                              <th>Time</th>
                            </tr>
                            <tr v-for="schedule in selectedSchedules">
                              <td>{{ schedule.day }}</td>
                              <td>{{ schedule.time }}</td>
                            </tr>
                            <tr v-if="selectedSchedules.length > 0 && selectedOptions != 'anotherSchedule'">
                              <td colspan="2" >{{ selectedSchedules[selectedSchedules.length-1].optFormatted }}</td>
                            </tr>
                          </table>
                        </div>

                      </div>
                      <!-- SCHEDULING BLOCK END -->

                      <div class="col-md-12">
                        <div class="form-group">
                          <label for="selectedZone"><b>Contact Preferrence</b></label>
                          <select class="form-control ccInput" name="contactPreferrence" v-model="contactPreferrence">
                            <option value="" disabled>-Please Select Preferrence-</option>
                            <option value="Skype">Skype</option>
                            <option value="WeChat">WeChat</option>
                          </select>
                          <input class="form-control ccInput" type="text" name="contactPreferrenceValue" v-model="contactPreferrenceValue" :placeholder="'Please Enter '+contactPreferrence+' ID'">
                        </div>
                      </div>
          
                      <div class="form-group text-right">
                        <hr>
                      </div>

                      <div id="newCard" :class="(!otherCard || !customerData.status ? 'd-none':'')">
                        <div class="form-row">
                          <label for="card-element">Credit or debit card:</label>
                          <div id="card-element" class="StripeElement StripeElement--empty"></div>
       
                          <div id="card-errors" role="alert"></div>
                          <label>Name on card:</label>
                          <input class="ccInput" name="nameOnCard" type="text" placeholder="eg:John Doe">
                           
                        </div>
                        
                      </div>

                      <div v-if="customerData && customerData.status && stepSchedule > 5" class="row g-3">
                        <div class="col-auto">
                          <div v-if="customerData.data.card && !otherCard" class="form-group text-right">
                            <button type="button" @click="submitForm" class="btn btn-danger btn-lg">Charge Card ending {{ customerData.data.card.last4 }}</button>
                          </div>

                          <div v-if="otherCard" class="form-group text-right">
                            <button type="button" @click="submitForm" class="btn btn-danger btn-lg">Place Order $299</button>
                          </div>
  

                        </div>

                        <div class="col-auto">
                          <div class="form-group">
                            <input class="d-none" type="checkbox" name="otherCard" v-model="otherCard" >
                            <button type="button" :class="'btn btn-'+ (otherCard ? 'danger':'default') + ' btn-lg'" @click="newCard()">New Card</button>
                          </div>
                        </div>

                      </div>
                      <p v-if="customerData && !customerData.status" class="text-danger">{{ customerData.message }}</p>
          
                    </div> <!-- card body -->

                    <div class="d-none" v-for="(fields,ndx) in selectedSchedules">
                      <input type="text" :name="'fields['+ndx+'][day]'" :value="fields.day">
                      <input type="text" :name="'fields['+ndx+'][time]'" :value="fields.time">
                      <input type="text" :name="'fields['+ndx+'][option]'" :value="fields.option">
                      <input type="text" :name="'fields['+ndx+'][optFormatted]'" :value="fields.optFormatted">
                    </div>
          
                    
          
                  </form>
          
                  
              
                </div>
          
              </div>

            </div>
          
          </section>
          
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal" >Close</button>
        </div>
      </div>
    </div>
  </div>

</section>
  <script src="/personal/js/vue-2.js"></script>
  <script src="https://js.stripe.com/v3/"></script>
<script>
  var stripe = Stripe('<%= helpers.getPKEY() %>');
  var vueApp = new Vue({
    el: "#checkout-content",
    data: {
      vuex: JSON.parse(window.localStorage.getItem('vuex')),
      customerEmail: '<%= custEmail %>',
      customerData: null,
      showError: false,
      errorMessage: '',
      stripeValMessage: '',
      otherCard: false,
      selectedDay: '',
      selectedDayFormat: '',
      selectedTime: '',
      selectedHours: '',
      selectedOptions: '',
      stepSchedule: 1,
      timeSelections: [
        ["8:30AM - 9:30PM","9:30AM - 10:30AM","10:30AM - 11:30AM"],
        ["11:30AM - 12:30PM","12:30NN - 1:30PM"],
        ["1:30PM - 2:30PM","2:30PM - 3:30PM","3:30PM - 4:30PM"],
        ["4:30PM - 5:30PM","5:30PM - 6:30PM","6:30PM - 7:30PM"],
      ],
      selectedSchedules: [],
      contactPreferrence: '',
      contactPreferrenceValue: ''
    },
    methods: {

      newCard: function() {
        this.otherCard = !this.otherCard
      },

      submitForm: async function() {
        this.errorMessage = this.validateForm

        stripe.createToken(card).then(function(result) {
          if (result.error) {
            // Inform the user if there was an error
            var errorElement = document.getElementById('card-errors');
            errorElement.textContent = result.error.message;
            this.errorMessage = result.error.message
          } else {
            // Send the token to your server
            stripeTokenHandler(result.token);
          }
        });

        if (!this.errorMessage) {
          this.showError = false;
          document.getElementById("payment-form").submit();
        } else {
          this.showError = true;
        }

      },

      checkEmail: async function() {

        console.log("checking", this.customerEmail);
        if (this.customerEmail) {

          let customerInfo = await fetch('/personal/api/v1/checkEmail/'+this.customerEmail)
          .then(response => response.json());

          this.customerData = customerInfo

          if ( this.customerData && this.customerData.data && !this.customerData.data.card ) {
            this.otherCard = true
          }

          console.log(this.customerData);

          // this.errorMessage = this.validateForm
          // this.showError = true;

          if (this.customerData && !this.customerData.status) {
            this.showError = true;
            this.errorMessage = this.customerData.message
          }

        }

      },

      setDay : function(selectedDay,selectedDayFormat){
        console.log(selectedDay);
        this.selectedDay = selectedDay
        this.selectedDayFormat = selectedDayFormat
        this.stepSchedule++
      },

      setTime : function(selectedTime){
        this.selectedTime = selectedTime
        this.stepSchedule++
      },

      setHours : function(selectedHours){
        this.selectedHours = selectedHours
        this.stepSchedule++
      },

      selectOptions : function(option,optFormatted){
        this.selectedOptions = option

        // 
        let data = {
          time: this.selectedHours,
          day: this.selectedDay,
          option: this.selectedOptions,
          optFormatted: optFormatted
        }
        this.selectedSchedules.push(data)

        if (option === 'anotherSchedule') {
          
          this.selectedDay = ''
          this.selectedDayFormat = ''
          this.selectedTime = ''
          this.selectedHours = ''
          this.selectedOptions = ''
          this.stepSchedule = 1

          
        } else if (option === 'setAllForWeek') {
          this.stepSchedule = 6
        } else {
          // decide later
          this.stepSchedule = 6
        }

        console.log(this.selectedSchedules);

      }

    },
    computed: {

      validateForm : function() {

        let message = ""
        if (!this.customerEmail) {
          message = "Please enter email address."
        } else if (!this.customerData || !this.customerData.status) {
          message = "Sorry, We could not find any active ChinesePod subscription."
        } 
        // else if (!this.contactPreferrenceValue || !this.contactPreferrence) {
        //   message = "Please select contact preferremces"
        // }

        return message;
      }
    }

  })

  vueApp.checkEmail()

  if (vueApp.vuex) {
    console.log(vueApp.vuex);
  }
  

  // Create an instance of Elements
  var elements = stripe.elements();

  // Custom styling can be passed to options when creating an Element.
  // (Note that this demo uses a wider set of styles than the guide below.)
  var style = {
    base: {
    color: '#32325d',
    lineHeight: '18px',
    fontFamily: 'Roboto,sans-serif',
    fontSmoothing: 'antialiased',
    fontSize: '16px',
    '::placeholder': {
      color: '#aab7c4'
    }
    },
    invalid: {
    color: '#e1001e',
    iconColor: '#e1001e'
    }
  };

  // Create an instance of the card Element
  var card = elements.create('card', {style: style});

  // Add an instance of the card Element into the 'card-element' <div>
  card.mount('#card-element');

  // Handle real-time validation errors from the card Element.
  card.addEventListener('change', function(event) {
    var displayError = document.getElementById('card-errors');
    if (event.error) {
    displayError.textContent = event.error.message;
    vueApp.stripeValMessage = event.error.message;
    } else {
    displayError.textContent = '';
    vueApp.stripeValMessage = '';
    }

    
  });

  // Handle form submission
  // var form = document.getElementById('payment-form');
  // form.addEventListener('submit', function(event) {
  //   event.preventDefault();

    
  // });
  
  function getPlatformInfo(x){
      if(x === 'iptGMAddress'){
      document.getElementById("iptGMAddress").classList.remove("d-none")
      document.getElementById("iptSkypeID").classList.add("d-none")
      } else if(x === 'iptSkypeID'){
      document.getElementById("iptSkypeID").classList.remove("d-none")
      document.getElementById("iptGMAddress").classList.add("d-none")
      }
  }
  // Submit the form with the token ID.
  function stripeTokenHandler(token) {
    // Insert the token ID into the form so it gets submitted to the server
    var form = document.getElementById('payment-form');
    var hiddenInput = document.createElement('input');
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', 'stripeToken');
    hiddenInput.setAttribute('value', token.id);
    form.appendChild(hiddenInput);

    // Submit the form
    form.submit();
  }
</script>